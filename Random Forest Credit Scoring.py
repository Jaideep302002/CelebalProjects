# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gazFtfEz7AduvNW4QBfHx0liPlnQF9Vy
"""

import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix
from sklearn.preprocessing import StandardScaler

# Load the dataset
file_path = '/content/german.data-numeric'
df = pd.read_csv(file_path, sep='\s+', header=None)

X = df.iloc[:, :-1]
y = df.iloc[:, -1].replace({2: 0})  # 1 = good, 0 = bad

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Train-test Split
X_train, X_test, y_train, y_test = train_test_split(
    X_scaled, y, test_size=0.3, random_state=42)

# Random Forest Classifier
rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# Predictions
y_pred = rf.predict(X_test)

# Evaluation
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# confusion matrix
print(confusion_matrix(y_test, y_pred))

# classifiaction report
print(classification_report(y_test, y_pred))

import matplotlib.pyplot as plt

importances = rf.feature_importances_
indices = np.argsort(importances)[::-1]

plt.figure(figsize=(10,6))
plt.title("Feature Importances")
plt.bar(range(X.shape[1]), importances[indices], align="center")
plt.xlabel("Feature Index")
plt.ylabel("Importance")
plt.show()